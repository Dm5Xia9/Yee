@page "/admin/pages"

@using Yee.Page.Services

@inject PageCollection pageCollection
@using AntDesign
@inject Yee.Page.Repositories.PageRepository pageRepository
@inject IMessageService message
<AdminPage>
    <Header>
        <div class="d-flex align-items-center flex-wrap mr-1">
            <!--begin::Page Heading-->
            <div class="d-flex align-items-baseline flex-wrap mr-5">
                <!--begin::Page Title-->
                <h3 class="text-dark font-weight-bold my-1 mr-5">Страницы</h3>
                <!--end::Page Title-->
            </div>
            <!--end::Page Heading-->
        </div>
    </Header>
    <Body>
        @*<div style="padding: 1rem;">
            @foreach (var yeePageGroup in pageCollection.GroupBy(p => p.Type.Assembly))
            {
                <div>
                    <div>
                        <h4>@yeePageGroup.Key.GetName().Name</h4>
                    </div>

                    <div>
                        @foreach (var yeePage in yeePageGroup)
                        {
                            <div>
                                <div>
                                    @yeePage.Type.Name
                                </div>
                                <div>
                                    @yeePage.RouteAttribute.Template
                                </div>
                            </div>
                        }
                    </div>

                </div>
            }
        </div>*@

        <div>
            <Input Style="margin: 20px; margin-bottom: 0px;" @bind-Value="CurrentName" placeholder="Название страницы" />
            <Button Class="admin-button-primary" OnClick="Create" Style="display: inline-block; margin-left: auto; margin: 20px;">
                Добавить страницу
            </Button>

        </div>

        @if (IsLoad == false)
        {
            <Yee.Admin.Component.Pages.PagesList @ref="RefPagesList" OnCopy="Copy"></Yee.Admin.Component.Pages.PagesList>
        }
    </Body>
</AdminPage>

@code{

    public string CurrentName { get; set; }

    public bool IsLoad { get; set; }

    public Yee.Admin.Component.Pages.PagesList RefPagesList { get; set; }
    public void Create()
    {
        if (string.IsNullOrEmpty(CurrentName))
        {
            message.Error("Нужно указать имя");
            return;
        }

        pageRepository.CreatePage(CurrentName);

        message.Success($"Страница {CurrentName} создана");
        CurrentName = null;
        RefPagesList.Refrash();
        StateHasChanged();
    }

    public void Copy(Yee.Page.Models.YeePage page)
    {
        if (string.IsNullOrEmpty(CurrentName))
        {
            message.Error("Нужно указать имя");
            return;
        }


        pageRepository.CopyPage(page.Id, CurrentName);

        message.Success($"Страница {CurrentName} скопирована");
        CurrentName = null;
        RefPagesList.Refrash();
        StateHasChanged();

    }
}