@using Microsoft.AspNetCore.Components.Web 
@inject NavigationManager _navManager

@*<li class="menu-item menu-item-submenu" aria-haspopup="true" data-menu-toggle="hover">
        <a href="javascript:;" class="menu-link menu-toggle">
            <span class="menu-text">@Item.Title</span>
            <i class="menu-arrow"></i>
        </a>
        <div class="menu-submenu">
            <i class="menu-arrow"></i>
            <ul class="menu-subnav">
                <li class="menu-item menu-item-parent" aria-haspopup="true">
                    <span class="menu-link">
                        <span class="menu-text">@Item.Title</span>
                    </span>
                </li>
                @foreach (var item in Item.ChildItems)
                {
                    if (item is GroupMenuItem group)
                    {
                        <AdminNavGroup Item="group"></AdminNavGroup>
                    }
                    else if (item is ActionMenuItem action)
                    {
                        <AdminNavItem Item="action"></AdminNavItem>
                    }

                }
            </ul>
        </div>
    </li>*@

<li class="menu-item menu-item-submenu @(IsActive ? "menu-item-open" : "")" aria-haspopup="true" data-menu-toggle="hover">
    <a href="#" class="menu-link menu-toggle" @onclick="ToggleGroupItem" @onclick:preventDefault>
        <span class="menu-text">@Item.Title</span>
        <i class="menu-arrow"></i>
    </a>
    <div class="menu-submenu" kt-hidden-height="80">
        @if (Item.HasChilds)
        {
            <ul class="menu-subnav">
                @foreach (var item in Item.ChildItems)
                {
                    @if (item is GroupMenuItem group)
                    {
                        <AdminNavGroup Item="group"></AdminNavGroup>
                    }
                    else if (item is ActionMenuItem action)
                    {
                        <AdminNavItem Item="@action" Link="@action.Link"></AdminNavItem>
                    }
                }
            </ul>
        }
    </div>
</li>


@code{

    [Parameter] public GroupMenuItem Item { get; set; }
    private bool IsActive = false;

    protected override void OnInitialized()
    {
        var currentLink = "/" + _navManager.ToBaseRelativePath(_navManager.Uri);
        IsActive = Item.ChildItems.Any(i => i.IsActive(currentLink, true));
    }

    public void ToggleGroupItem()
    {
        IsActive = !IsActive;
        StateHasChanged();
    }

}