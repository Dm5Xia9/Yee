// <auto-generated />
using System;
using System.Text.Json;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Yee.Page;
using Yee.Page.Models;

#nullable disable

namespace Yee.Page.Migrations
{
    [DbContext(typeof(PageDbContext))]
    [Migration("20221016115322_not_nullable")]
    partial class not_nullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("YeePage")
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Yee.Page.Models.YeePage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BodyClass")
                        .HasColumnType("text");

                    b.Property<string>("BodyId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text");

                    b.Property<YeeCSharpLink>("HeaderLink")
                        .HasColumnType("jsonb");

                    b.Property<YeeCSharpLink>("RouterLink")
                        .HasColumnType("jsonb");

                    b.Property<YeeCSharpLink>("StyleLink")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("YeePages", "YeePage");
                });

            modelBuilder.Entity("Yee.Page.Models.YeeSectionValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<YeeCSharpLink>("SectionLink")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<JsonDocument>("Value")
                        .HasColumnType("jsonb");

                    b.Property<long>("YeePageId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("YeePageId");

                    b.ToTable("YeeSectionValues", "YeePage");
                });

            modelBuilder.Entity("Yee.Page.Models.YeeSectionValue", b =>
                {
                    b.HasOne("Yee.Page.Models.YeePage", "YeePage")
                        .WithMany("YeeSectionValues")
                        .HasForeignKey("YeePageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YeePage");
                });

            modelBuilder.Entity("Yee.Page.Models.YeePage", b =>
                {
                    b.Navigation("YeeSectionValues");
                });
#pragma warning restore 612, 618
        }
    }
}
