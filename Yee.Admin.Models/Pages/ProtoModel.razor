@page "/admin/proto/{Id}"
@layout Yee.Admin.Shared.AdminLayout
@using AntDesign
@using Yee.Admin.Component.Common
@using Microsoft.AspNetCore.Components.Forms
@inject IMessageService messageService
@inject Yee.EntityFrameworkCore.DbContextFactory contextFactory

<AdminPage>
    <Header>
        <div class="d-flex align-items-center flex-wrap mr-1">
            <!--begin::Page Heading-->
            <div class="d-flex align-items-baseline flex-wrap mr-5">
                <!--begin::Page Title-->
                <h5 class="text-dark font-weight-bold my-1 mr-5">Прототип @Id</h5>
                <!--end::Page Title-->
            </div>
            <!--end::Page Heading-->
        </div>
    </Header>
    <Body>
        <div style="padding: 10px;">
            <DbStateScreen State="state">
                @if (DefualtProtoObject != null)
                {
                    <EditForm Model="DefualtProtoObject">
                        <Yee.Section.Handlers.ProtoHandlerFactory OnInput="OnInput"
                                                                  InputValue="DefualtProtoObject"
                                                                  ProtoType="ProtoType">

                        </Yee.Section.Handlers.ProtoHandlerFactory>

                        <div style="height: 3rem;">
                            <div style=" padding: 1rem; float: right; padding-right: 10rem;">
                                <AntDesign.Button OnClick="Save" Class="btn btn-success">Сохранить</AntDesign.Button>
                            </div>
                        </div>
                    </EditForm>
                }
            </DbStateScreen>

        </div>
    </Body>
</AdminPage>




@code{
    [Parameter] public string Id { get; set; }

    public long? LongId => GetLongId();
    private long? GetLongId()
    {
        if (long.TryParse(Id, out long result))
        {
            return result;
        }
        return null;
    }

    public Type ProtoType { get; set; }

    public object DefualtProtoObject;

    public string LastId { get; set; }
    public Yee.EntityFrameworkCore.DbContextStateValue state;
    public Yee.Page.PageDbContext pageContext;
    public Yee.Page.Models.YeePropertyValue YeePropertyValue;
    protected override void OnInitialized()
    {
        state = contextFactory.Create(typeof(Yee.Page.PageDbContext));
        StateHasChanged();

        if (state.IsWorked == false)
        {
            return;
        }

        pageContext = state.Context as Yee.Page.PageDbContext;


        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender || LastId != Id)
        {
            LastId = Id;

            YeePropertyValue = pageContext.YeePropertyValues.FirstOrDefault(p => p.Id == LongId);
            if (YeePropertyValue == null)
                return;

            var type = YeePropertyValue.PropertyType.ToType();
            if (type == null)
                return;

            ProtoType = type;
            DefualtProtoObject = Newtonsoft.Json.Linq.JObject.Parse(YeePropertyValue.Value).ToObject(type);
            StateHasChanged();
        }
    }

    public void OnInput(object protoOffers)
    {
        DefualtProtoObject = protoOffers;
    }

    public void Save()
    {
        if(YeePropertyValue == null)
        {
            messageService.Error("Не сохранено");
            return;
        }

        YeePropertyValue.Value = Newtonsoft.Json.JsonConvert.SerializeObject(DefualtProtoObject);
        pageContext.YeePropertyValues.Update(YeePropertyValue);
        pageContext.SaveChanges();
    }



}